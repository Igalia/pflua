#!/usr/bin/env luajit

package.path = package.path .. ";../src/?.lua"

local pf = require("pf")

local filter = ...
assert(filter, "usage: dump-markdown FILTER")

function out(...) print(string.format(...)) end

local function chomp(str)
   return string.gsub(str, "\n$", "")
end

function compile(opts)
   local ok, result = pcall(pf.compile_filter, filter, opts)
   if not ok then result = 'Filter failed to compile: '..result end
   return chomp(result)
end

out("# %s\n\n", filter)
out("## BPF\n\n```\n%s\n```\n\n",
    compile({libpcap=true, source=true}))
out("## BPF cross-compiled to Lua\n\n```\n%s\n```\n\n",
    compile({bpf=true, source=true}))
out("## Direct pflang compilation\n\n```\n%s\n```\n",
    compile({source=true}))
out("## Native pflang compilation\n\n```\n%s\n```\n",
    compile({native=true, source=true}))
